name: CI

on:
  push:
    branches:
      - main
      - ppc-support
      - 'release-*'
  pull_request:
    branches:
      - main
      - 'release-*'
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - ".github/ISSUE_TEMPLATE/*"

# NOTE!!!
#
# If you add a job here that is a REQUIRED status check in GitHub, you MUST add a job with the same name to ci-docs-only.yaml
#
# NOTE!!!

env:
  # etcd uses fsync by default, disable it for running on github actions to avoid disk contention
  # xref: https://github.com/kcp-dev/kcp/pull/435/commits/064a517747d69c2cd8f7f8b4a595ad909e595c89
  UNSAFE_E2E_HACK_DISABLE_ETCD_FSYNC: true

jobs:
  e2e-shared-server:
    name: e2e-shared-server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: v1.18
      - run: make build

      # Install kind with a local registry
      - uses: container-tools/kind-action@v1
        name: Kubernetes KinD Cluster w/local registry

      - run: |-
          go install github.com/google/ko@latest

      - run: |-
          LOG_DIR=/tmp/e2e/shared-server/artifacts ARTIFACT_DIR=/tmp/e2e COUNT=2 E2E_PARALLELISM=2 \
          make test-e2e-shared

  e2e-sharded:
    name: e2e-sharded
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: v1.18
    - run: make build

    # Install kind with a local registry
    - uses: container-tools/kind-action@v1
      name: Kubernetes KinD Cluster w/local registry

    - run: |-
        go install github.com/google/ko@latest

    - run: |-
        LOG_DIR=/tmp/e2e/sharded/artifacts ARTIFACT_DIR=/tmp/e2e COUNT=2 E2E_PARALLELISM=2 \
        make test-e2e-sharded

  e2e-tests-ppc64le:
    name: e2e-tests-ppc64le
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2.2.0
        name: E2E KCP tests
        id: build-ppc
        with:
          arch: ppc64le
          distro: ubuntu20.04
          
          dockerRunArgs: |
            --volume "/var/run/docker.sock:/var/run/docker.sock"
          
          run: |
            apt-get update -y
            apt-get install wget tar gcc runc iptables libdevmapper1.02.1 -y
            
            #Install docker
            mkdir /root/docker; cd /root/docker
            wget https://oplab9.parqtec.unicamp.br/pub/ppc64el/docker/version-20.10.0/ubuntu-bionic/docker-ce_20.10.0~3-0~ubuntu-bionic_ppc64el.deb
            wget https://oplab9.parqtec.unicamp.br/pub/ppc64el/docker/version-20.10.0/ubuntu-bionic/docker-ce-cli_20.10.0~3-0~ubuntu-bionic_ppc64el.deb
            wget https://oplab9.parqtec.unicamp.br/pub/ppc64el/docker/version-20.10.0/ubuntu-bionic/docker-ce-rootless-extras_20.10.0~3-0~ubuntu-bionic_ppc64el.deb
            wget https://oplab9.parqtec.unicamp.br/pub/repository/debian/ppc64el/containerd/containerd-1.6.4-ppc64le.deb
            dpkg -i docker-ce_20.10.0~3-0~ubuntu-bionic_ppc64el.deb docker-ce-cli_20.10.0~3-0~ubuntu-bionic_ppc64el.deb docker-ce-rootless-extras_20.10.0~3-0~ubuntu-bionic_ppc64el.deb containerd-1.6.4-ppc64le.deb
            
            #Install Go, Kind
            wget https://go.dev/dl/go1.18.linux-ppc64le.tar.gz
            tar -C /usr/local -xzf go1.18.linux-ppc64le.tar.gz
            export PATH=$PATH:/usr/local/go/bin
            go install github.com/google/ko@latest
            go install sigs.k8s.io/kind@v0.14.0
            export PATH=$PATH:$(go env GOPATH)/bin 
            
            LOG_DIR=/tmp/e2e/shared-server/artifacts ARTIFACT_DIR=/tmp/e2e  \
            make test-e2e ARCH=ppc64le

  e2e-shared-server-ppc64le:
    name: e2e-shared-server-ppc64le
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2.2.0
        name: E2E Shared KCP tests
        id: build
        with:
          arch: ppc64le
          distro: ubuntu20.04
          
          dockerRunArgs: |
            --volume "/var/run/docker.sock:/var/run/docker.sock"
          
          run: |
            apt-get update -y
            apt-get install wget tar gcc runc iptables libdevmapper1.02.1 -y
            
            #Install docker
            mkdir /root/docker; cd /root/docker
            wget https://oplab9.parqtec.unicamp.br/pub/ppc64el/docker/version-20.10.0/ubuntu-bionic/docker-ce_20.10.0~3-0~ubuntu-bionic_ppc64el.deb
            wget https://oplab9.parqtec.unicamp.br/pub/ppc64el/docker/version-20.10.0/ubuntu-bionic/docker-ce-cli_20.10.0~3-0~ubuntu-bionic_ppc64el.deb
            wget https://oplab9.parqtec.unicamp.br/pub/ppc64el/docker/version-20.10.0/ubuntu-bionic/docker-ce-rootless-extras_20.10.0~3-0~ubuntu-bionic_ppc64el.deb
            wget https://oplab9.parqtec.unicamp.br/pub/repository/debian/ppc64el/containerd/containerd-1.6.4-ppc64le.deb
            dpkg -i docker-ce_20.10.0~3-0~ubuntu-bionic_ppc64el.deb docker-ce-cli_20.10.0~3-0~ubuntu-bionic_ppc64el.deb docker-ce-rootless-extras_20.10.0~3-0~ubuntu-bionic_ppc64el.deb containerd-1.6.4-ppc64le.deb
            
            #Install Go, Kind
            wget https://go.dev/dl/go1.18.linux-ppc64le.tar.gz
            tar -C /usr/local -xzf go1.18.linux-ppc64le.tar.gz
            export PATH=$PATH:/usr/local/go/bin
            go install github.com/google/ko@latest
            go install sigs.k8s.io/kind@v0.14.0
            export PATH=$PATH:$(go env GOPATH)/bin 
            kind create cluster --image quay.io/mayurwaghmode111/node-ppc64le:ppc64le
            
            LOG_DIR=/tmp/e2e/shared-server/artifacts ARTIFACT_DIR=/tmp/e2e COUNT=2 E2E_PARALLELISM=2 \
            make test-e2e-shared ARCH=ppc64le

  e2e-sharded-ppc64le:
    name: e2e-sharded-ppc64le
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: uraimo/run-on-arch-action@v2.2.0
      name: E2E Sharded KCP tests
      id: build
      with:
        arch: ppc64le
        distro: ubuntu20.04
        
        dockerRunArgs: |
            --volume "/var/run/docker.sock:/var/run/docker.sock"
        
        run: |
          apt-get update -y
          apt-get install wget tar gcc -y
          
          #Install Go, Kind
          wget https://go.dev/dl/go1.18.linux-ppc64le.tar.gz
          tar -C /usr/local -xzf go1.18.linux-ppc64le.tar.gz
          export PATH=$PATH:/usr/local/go/bin
          go install github.com/google/ko@latest
          go install sigs.k8s.io/kind@v0.14.0
          export PATH=$PATH:$(go env GOPATH)/bin 
          kind create cluster --image quay.io/mayurwaghmode111/node-ppc64le:ppc64le
          
          LOG_DIR=/tmp/e2e/sharded/artifacts ARTIFACT_DIR=/tmp/e2e COUNT=2 E2E_PARALLELISM=2 \
          make test-e2e-sharded ARCH=ppc64le